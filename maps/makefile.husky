# Makefile for the Husky build environment
# msged/maps/makefile.husky

allchs_full  := $(wildcard $(msged_MAPDIR)*.chs)
allchs       := $(notdir $(allchs_full))
readmaps_all := readmaps.437 readmaps.850 readmaps.865 readmaps.866 \
                readmaps.koi readmaps.ukr readmaps.is1 readmaps.is5
writmaps_all := $(subst read,writ,$(readmaps_all))

readmaps_BLD := $(addprefix $(msged_BUILDDIR),$(readmaps_all))
writmaps_BLD := $(addprefix $(msged_BUILDDIR),$(writmaps_all))
readmaps_DST := $(addprefix $(msged_DOCDIR_DST),$(readmaps_all))
writmaps_DST := $(addprefix $(msged_DOCDIR_DST),$(writmaps_all))

ifeq ($(CODEPAGE), CP437)
    current_readmaps = readmaps.437
    current_writmaps = writmaps.437
else ifeq ($(CODEPAGE), CP850)
    current_readmaps = readmaps.850
    current_writmaps = writmaps.850
else ifeq ($(CODEPAGE), CP865)
    current_readmaps = readmaps.865
    current_writmaps = writmaps.865
else ifeq ($(CODEPAGE), CP866)
    current_readmaps = readmaps.866
    current_writmaps = writmaps.866
else ifeq ($(CODEPAGE), KOI8-R)
    current_readmaps = readmaps.koi
    current_writmaps = writmaps.koi
else ifeq ($(CODEPAGE), CP1125)
    current_readmaps = readmaps.ukr
    current_writmaps = writmaps.ukr
else ifeq ($(CODEPAGE), LATIN-1)
    current_readmaps = readmaps.is1
    current_writmaps = writmaps.is1
else ifeq ($(CODEPAGE), ISO-5)
    current_readmaps = readmaps.is5
    current_writmaps = writmaps.is5
endif

# In function maps_build_rules
# $1 is a pair of codepage names delimited by an underline like CP1125_ukr
define maps_build_rules
    $1_newpair = $$(subst _, ,$1)
    $1_long    = $$(firstword $$($1_newpair))
    $1_short   = $$(lastword $$($1_newpair))

    $(msged_BUILDDIR)readmaps.$$($1_short): $(msged_BUILDDIR)writmaps.$$($1_short)
		$(MV) $(msged_MAPDIR)readmaps.$$($1_short) $$@; $(TOUCH) $$@

    $(msged_BUILDDIR)writmaps.$$($1_short): $(msged_OBJDIR)makemaps$(_EXE) $$(allchs_full)
		-echo "DO NOT WORRY ABOUT WARNINGS ABOUT no matching charset!"
		cd $(msged_MAPDIR) && ../../$$< $$($1_long) $$($1_short) $$(allchs)
		$(MV) $(msged_MAPDIR)writmaps.$$($1_short) $$@; $(TOUCH) $$@
endef

CP_pairs := CP437_437 CP850_850 CP865_865 CP866_866 KOI8-R_koi CP1125_ukr LATIN-1_is1 ISO-5_is5

ifneq ($(DYNLIBS), 1)
    build_maps: $(readmaps_BLD) ;

    $(foreach pair,$(CP_pairs),$(eval $(call maps_build_rules,$(pair))))
endif

$(msged_OBJDIR)makemaps$(_EXE): $(msged_OBJDIR)makemaps$(_OBJ) $(huskylib_TARGET_BLD)
	$(CC) $(LFLAGS) $(EXENAMEFLAG) $@ $^

$(msged_OBJDIR)makemaps$(_OBJ): $(msged_MAPDIR)makemaps$(_C) | $(msged_OBJDIR)
	$(CC) $(CFLAGS) $(msged_CDEFS) $(OBJNAMEFLAG) $@ $<



.PHONY: check_codepage

# Install
install_maps: $(msged_DOCDIR_DST)readmaps.dat \
              $(msged_DOCDIR_DST)writmaps.dat | check_codepage ;

check_codepage:
	@[ -n "$(current_readmaps)" ] || echo "Unknown CODEPAGE=$(CODEPAGE)"
	@-[ -f "$(msged_OBJDIR)codepage" ] && \
	[ "$$(cat $(msged_OBJDIR)codepage)" = "$(CODEPAGE)" ] || \
	echo "$(CODEPAGE)" > "$(msged_OBJDIR)codepage"

$(msged_DOCDIR_DST)readmaps.dat: $(readmaps_DST) | $(msged_OBJDIR)codepage
	cd $(msged_DOCDIR_DST); \
	$(LN) $(LNHOPT) $(current_readmaps) readmaps.dat; \
	$(TOUCH) readmaps.dat

$(msged_DOCDIR_DST)writmaps.dat: $(writmaps_DST) | $(msged_OBJDIR)codepage
	cd $(msged_DOCDIR_DST); \
	$(LN) $(LNHOPT) $(current_writmaps) writmaps.dat; \
	$(TOUCH) writmaps.dat

# In function maps_install_rules
# $1 is a pair of codepage names delimited by an underline like CP1125_ukr
define maps_install_rules
    $1_newpair := $$(subst _, ,$1)
    $1_long    := $$(firstword $$($1_newpair))
    $1_short   := $$(lastword $$($1_newpair))

    $(msged_DOCDIR_DST)readmaps.$$($1_short): $(msged_DOCDIR_DST)writmaps.$$($1_short)
		$(MV) $(msged_MAPDIR)readmaps.$$($1_short) $$@; $(TOUCH) $$@

    $(msged_DOCDIR_DST)writmaps.$$($1_short): $(msged_OBJDIR)makemaps$(_EXE) \
        $(msged_LIBS_DST) $(allchs_full)
		-echo "DO NOT WORRY ABOUT WARNINGS ABOUT no matching charset!"
        ifneq ($(or $(RPM_BUILD_ROOT),$(findstring $(HOME),$(PREFIX))),)
			cd $(msged_MAPDIR) && \
			LD_LIBRARY_PATH=$(LIBDIR_DST) ../../$$< $$($1_long) $$($1_short) $$(allchs)
        else
			cd $(msged_MAPDIR) && \
			../../$$< $$($1_long) $$($1_short) $$(allchs)
        endif
		$(MV) $(msged_MAPDIR)writmaps.$$($1_short) $$@; $(TOUCH) $$@
endef

# We generate maps during installation if DYNLIBS=1 because
# when this is the case, the makemaps application needs access to the
# libraries with which it was linked. It is easier to access them in
# different operating systems when the libraries are already installed
# in one directory
#
ifeq ($(DYNLIBS), 1)
    $(foreach pair,$(CP_pairs),$(eval $(call maps_install_rules,$(pair))))
else
    $(readmaps_DST): $(msged_DOCDIR_DST)readmaps.%: $(msged_BUILDDIR)readmaps.% | $(msged_DOCDIR_DST)
		$(INSTALL) $(IMOPT) $< $| && \
		$(TOUCH) $@

    $(writmaps_DST): $(msged_DOCDIR_DST)writmaps.%: $(msged_BUILDDIR)writmaps.% | $(msged_DOCDIR_DST)
		$(INSTALL) $(IMOPT) $< $| && \
		$(TOUCH) $@
endif

$(msged_DOCDIR_DST):
	[ -d $(PARENT_DOCDIR_DST) ] || \
	$(MKDIR) $(MKDIROPT) $(PARENT_DOCDIR_DST)
	[ -d $(DOCDIR_DST) ] || \
	$(MKDIR) $(MKDIROPT) $(DOCDIR_DST)
	[ -d $(msged_DOCDIR_DST) ] || \
	$(MKDIR) $(MKDIROPT) $@

# Just so that MAKE does not say that it does not know how to make this target
# In fact check_codepage makes it
$(msged_OBJDIR)codepage: $(allchs_full) ;


# Clean
clean_maps:
	-$(RM) $(RMOPT) $(msged_OBJDIR)makemaps$(_OBJ)
	-$(RM) $(RMOPT) $(msged_MAPDIR)readmaps.*
	-$(RM) $(RMOPT) $(msged_MAPDIR)writmaps.*


# Distclean
distclean_maps: clean_maps
	-$(RM) $(RMOPT) $(msged_OBJDIR)makemaps$(_EXE)
	-$(RM) $(RMOPT) $(msged_OBJDIR)codepage
	-$(RM) $(RMOPT) $(msged_BUILDDIR)readmaps.*
	-$(RM) $(RMOPT) $(msged_BUILDDIR)writmaps.*
